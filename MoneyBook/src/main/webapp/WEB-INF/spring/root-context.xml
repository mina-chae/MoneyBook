<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- ★이 root-context.xml파일은 전체 프로젝트에 대한 환경설정 파일임. -->
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- DataSource using Spring JNDI -->
	<!-- ★스프링의 JNDI사용(커넥션 풀 사용) -->
	<bean id="datasourceByJNDI" class="org.springframework.jndi.JndiObjectFactoryBean">
		<!-- ★value속성: Servers폴더의 server.xml이나 context.xml의 <Context>태그 안의
        	  <ResourceLink global="" name="" type="">태그의
        	  name속성에 지정한 이름 									-->  
		<property name="jndiName" value="jdbc/moneybook"/>
		
		<!-- ★해당 was서버의 루트를 그대로 붙여주기 위한 resourceRef속성. 
			 루트 디렉토리를 다 적어주는 방식으로 할 경우 was서버가 바뀌었을 때 사용할 수 없기 때문에 불합리한 방법임.
			 아래 속성(resourceRef)을 사용하지 않은 경우 (디폴트 false) 위의 jndiName속성의 값으로
                        해당 WAS서버의 루트 디렉토리까지 적어줘야 한다 	예]java:/comp/env/jdbc/moneybook -->
		<property name="resourceRef">
			<value>true</value>
		</property>
	</bean>
	
	<!-- ★마이바티스 지원을 위한 빈 등록 -->
	<!-- ★1]SqlSessionFactory -->
	<!-- ★만일 pom.xml에 마이바티스와 관련된 dependency코드가 없다면 
	          마이바티스와 관련된 자르파일도 없는 거기 때문에 class경로에 빨간줄이감. 
	          그리고 스프링 JDBC도 있어야 하기 때문에 pom.xml에 라이브러리(spring-jdbc)를 추가한다. -->
<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		데이타소스:데이타베이스 연결정보
		<property name="dataSource" ref="datasourceByJNDI"/>
		환경설정 파일 위치 설정
		<property name="configLocation" value="classpath:mybatis/Configuration.xml"/>
	</bean>	 -->
	
	<!-- pom.xml에 해당 디팬던시 코드를 추가하였음에도 class=""에 빨간줄 가면 Project - clean 실행하면 됨. -->
	
		<!-- 2]SqlSessionTemplate(생성자 인젝션만 사용 가능) -->
	<!-- ※ SqlSessionTemplate사용시 SqlSession객체를 얻는 작업 그리고 insert/delete/update작업인 경우
		   commit해야 하는 작업을 할 필요가 없다.
		   close()도 할 필요 없다.
		   왜냐하면 반복적인 코딩을 하지 않도록 SqlSessionTemplater겍체에 미리 구현해 놓았기 때문에
		   단, SqlSessionTemplate클래스를 사용하려면 AOP관련 라이브러리를 추가해야 한다.
		   (교안에 AOP참조) 													-->
	<!-- 탬플릿화해놓았기 때문에(미리 구현해놓음) 얘를 주입하면 close()등을 제외할 수 있다. -->
<!-- 	<bean id="template" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean> -->
	
</beans>
