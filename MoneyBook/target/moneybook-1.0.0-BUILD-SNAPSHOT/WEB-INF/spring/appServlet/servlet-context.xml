<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- ★이 파일은 스프링 환경설정 파일 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
<!-- 	 ViewResolver는  ModelAndView클래스가 전달한 논리적인 View의 정보를 실제 물리적인 
		 View의 정보로 변환해서 DispatcherServlet에게 전송한다.
		- org.springframework.web.servlet.view 패키지		
		- InternalResourceViewResolver : 디폴트 ViewResolver로 Jsp페이지를 사용자에게 보여줄 뷰로 선택한다.
		- prefix(접두사)와 suffix(접미사)속성을 이용하여 논리적인 이름으로 매핑 
		아래코드를 자바파일에서 적용한 예시 : "/WEB-INF/views/.jsp"		
		-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- ★아래 코드가 최상위 패키지부터 스캔함. 
		 컴포넌트 스캔을 사용하기 때문에 빈을 등록할 필요가 없다
	-->
	<context:component-scan base-package="com.cmn.moneybook" />
	
	<!-- ★tiles사용을 위한 bean등록 (web.servlet-버전.jar) -->
<!-- 	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/dirname1/dirname1/filename/xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean> -->
	
	<!-- ★tiles사용을 위해서는 기존의 뷰 리졸버말고 또 하나의 뷰 리졸버가 필요함. (뷰리졸버들한테 우선순위를 지정해줌) -->
	<!-- ★tiles를 처리하도록 또 다른 뷰리졸버 등록 -->
<!-- 	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="order" value="0" /> .jsp도 view로 사용하기 위해 우선순위를 가장먼저
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</beans:bean> -->
	
	<context:property-placeholder location="classpath:memoresources/memo.properties"/>
	
</beans:beans>
